// Code generated by templ@v0.2.364 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func nzcovidmap() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<div><img src=\"./img/covid19/icon-512x512.webp\" alt=\"Locations of Interest Explorer Icon\" class=\"h-16 w-16 md:h-24 md:w-24 mx-auto\"><p>")
			if err != nil {
				return err
			}
			var_3 := `Over the course of the pandemic, the NZCovidMap reached over 200,000 Kiwis across New Zealand, with a peak of 15,000 daily unique visitors. This tool provided people with a mobile-friendly view of Covid-19 Locations of Interest published by the NZ Ministry of Health. `
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p>")
			if err != nil {
				return err
			}
			var_4 := `- circle-based location selection method.`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p>")
			if err != nil {
				return err
			}
			var_5 := `- Location specific url pathing query params + "share link to location"`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p>")
			if err != nil {
				return err
			}
			var_6 := `- Live Meta image generation via self-referencing screenshot api `
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></div> <div class=\"flex justify-center\"><img class=\"rounded-lg shadow-lg\" src=\"./img/covid19/covid_desktop.webp\" alt=\"NZCovidMap Screenshot\"></div> ")
			if err != nil {
				return err
			}
			var_7 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				_, err = templBuffer.WriteString("<p>")
				if err != nil {
					return err
				}
				var_8 := `Each hour, the application would check for new locations in specific communities and (if a sub-reddit exists) posts for any new locations in a standard post format.`
				_, err = templBuffer.WriteString(var_8)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</p> <img src=\"./img/covid19/covid-reddit.png\" class=\"rounded-lg shadow-lg\" height=\"800px\">")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = subbox("Auto updates").Render(templ.WithChildren(ctx, var_7), templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" ")
			if err != nil {
				return err
			}
			var_9 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
				templBuffer, templIsBuffer := w.(*bytes.Buffer)
				if !templIsBuffer {
					templBuffer = templ.GetBuffer()
					defer templ.ReleaseBuffer(templBuffer)
				}
				_, err = templBuffer.WriteString("<ul class=\"list-inside list-disc\"><li>")
				if err != nil {
					return err
				}
				var_10 := `Provide a Mobile-friendly view of Locations of Interest`
				_, err = templBuffer.WriteString(var_10)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li><li>")
				if err != nil {
					return err
				}
				var_11 := `Raise awareness of Locations of Interests in our community.`
				_, err = templBuffer.WriteString(var_11)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li><li>")
				if err != nil {
					return err
				}
				var_12 := `Lower anxiety for those seeking updates about their community.`
				_, err = templBuffer.WriteString(var_12)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li></ul> <h1>")
				if err != nil {
					return err
				}
				var_13 := `Tech`
				_, err = templBuffer.WriteString(var_13)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</h1> <ul class=\"list-inside list-disc\"><li>")
				if err != nil {
					return err
				}
				var_14 := `A Mobile-friendly map view for digesting localized information`
				_, err = templBuffer.WriteString(var_14)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li><li>")
				if err != nil {
					return err
				}
				var_15 := `Up-to-date social Media sharing icons created for each town/city`
				_, err = templBuffer.WriteString(var_15)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li><li>")
				if err != nil {
					return err
				}
				var_16 := `Reddit Integration - Auto-Generate a "Location of Interest summary" for each subreddit & share relevant subreddit`
				_, err = templBuffer.WriteString(var_16)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</li></ul>")
				if err != nil {
					return err
				}
				if !templIsBuffer {
					_, err = io.Copy(w, templBuffer)
				}
				return err
			})
			err = subbox("Goals").Render(templ.WithChildren(ctx, var_9), templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(" <div class=\"font-bold rounded-lg border shadow-lg p-10 h-screen\"><h1>")
			if err != nil {
				return err
			}
			var_17 := `Inital Design`
			_, err = templBuffer.WriteString(var_17)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><ul class=\"list-inside list-disc\"><li>")
			if err != nil {
				return err
			}
			var_18 := `An n8n workflow that reads the CSV file published by the MoH. Locations are then categorized and saved.`
			_, err = templBuffer.WriteString(var_18)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</li><li>")
			if err != nil {
				return err
			}
			var_19 := `An n8n workflow endpoint that returns all the locations in the last 30 days.`
			_, err = templBuffer.WriteString(var_19)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</li><li>")
			if err != nil {
				return err
			}
			var_20 := `A statically rendered Next.JS site that is published each hour. A mobile-friendly interactive map with all locations marked.`
			_, err = templBuffer.WriteString(var_20)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</li></ul><h1>")
			if err != nil {
				return err
			}
			var_21 := `Why so complex?`
			_, err = templBuffer.WriteString(var_21)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1><ul class=\"list-inside list-disc\"><p>")
			if err != nil {
				return err
			}
			var_22 := `To reduce the complexity, cost and on-going maintenance cost of the application, the backend was deprecated in favor of directly pulling information from the MoH API. Recent improvements include generation of location-specific meta screenshots for engaging social media preview images.`
			_, err = templBuffer.WriteString(var_22)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></ul></div>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = box("NZCovidMap", "nzcovidmap").Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
