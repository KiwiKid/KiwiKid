// Code generated by templ@v0.2.364 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func home(yearSince string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		err = header().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<body><main class=\"flex-col justify-center text-center font-medium font-mono items-center\">")
		if err != nil {
			return err
		}
		err = scrollTrack().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<div class=\"h-screen flex justify-center items-center\"><div class=\"text-center\"><div class=\"text-2xl text-gray-800\">")
		if err != nil {
			return err
		}
		var_2 := `Hey, I'm Greg`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var var_3 string = "{ a software developer, football player, hobby fpv drone pilot } "
		_, err = templBuffer.WriteString(templ.EscapeString(var_3))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var var_4 string = "{ based in Christchurch, New Zealand } "
		_, err = templBuffer.WriteString(templ.EscapeString(var_4))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"text-gray-700 text-lg mt-2\">")
		if err != nil {
			return err
		}
		var_5 := `Open to new software development opportunities...`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" ")
		if err != nil {
			return err
		}
		var_6 := `Only considering fully/mostly remote roles.`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mt-6\">")
		if err != nil {
			return err
		}
		var_7 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<img src=\"./img/covid19/icon-512x512.webp\" alt=\"Locations of Interest Explorer Icon\" class=\"h-8 w-8 md:h-12 md:w-12 mx-auto\">")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = link("NZCovidMap", "#nzcovidmap").Render(templ.WithChildren(ctx, var_7), templBuffer)
		if err != nil {
			return err
		}
		err = link("Me", "#intro").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<div class=\"flex flex-col justify-center border border-gray-300 rounded-md hover:bg-gray-100\"><a class=\"flex justify-center items-center h-10\" href=\"#chchwaterreporter\"><span class=\"text-xl underline\">")
		if err != nil {
			return err
		}
		var_8 := `ChCh Water Reporter`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a><a class=\"flex justify-center items-center h-10\" href=\"https://chch-water-reporter.vercel.app\" target=\"_\"><span class=\"text-sm underline\">")
		if err != nil {
			return err
		}
		var_9 := `chch-water-reporter.vercel.app`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></a></div>")
		if err != nil {
			return err
		}
		err = link("FPV", "#fpv").Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div></div>")
		if err != nil {
			return err
		}
		err = nzcovidmap().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<div id=\"about\" class=\"min-h-screen\">")
		if err != nil {
			return err
		}
		err = about(yearSince).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		err = chchWaterReporter().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<button id=\"backToTop\" class=\"hidden fixed bottom-5 right-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded cursor-pointer\" onclick=\"window.scrollTo({top: 0, behavior: &#39;smooth&#39;});\">")
		if err != nil {
			return err
		}
		var_10 := `&#x2191;`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button><div style=\"height: 800px\"></div><div class=\"py-4\"><div class=\"text-3xl text-center\"></div><div class=\"border border-black p-4\"><div class=\"text-center\">")
		if err != nil {
			return err
		}
		var_11 := `If you made it this far, you must be keen.`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div><div class=\"text-center w-full\"><a class=\"underline text-2xl\" href=\"mailto:ghcumming01@gmail.com\">")
		if err != nil {
			return err
		}
		var_12 := `Get in touch`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></div></div><script>")
		if err != nil {
			return err
		}
		var_13 := `
					const backToTopButton = document.getElementById('backToTop');

						window.addEventListener('scroll', () => {
							if (window.pageYOffset > 100) {
								backToTopButton.classList.remove('hidden');
							} else {
								backToTopButton.classList.add('hidden');
							}
						});
			`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script><scroll-tracker></scroll-tracker></main></body>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
